services:
  postgres:
    image: postgres:15
    container_name: face_register_postgres_test
    environment:
      POSTGRES_DB: ${POSTGRES_DB}_test
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ:-UTC}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - person_detection
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: face_register_minio_test
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
      TZ: ${TZ:-UTC}
    command: server /data
    networks:
      - person_detection
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  db_migrate:
    image: face-register:test
    build:
      dockerfile: Dockerfile
      target: test
      args:
        APP_UID: ${APP_UID}
        APP_GID: ${APP_GID}
        LOG_DIR: ${LOG_DIR}
    container_name: face_register_db_migrate_test
    user: "${APP_UID}:${APP_GID}"
    environment:
      DATABASE_URL: ${DATABASE_URL}_test
      SERVICE_NAME: ${SERVICE_NAME}
      LOG_DIR: ${LOG_DIR}
      LOG_TO_STDOUT: ${LOG_TO_STDOUT}
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_MAX_DAYS: ${LOG_MAX_DAYS}
      TZ: ${TZ:-UTC}
    volumes:
      - ./assets:/app/assets
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - person_detection
    restart: "no"
    command: ["alembic", "-c", "app/alembic.ini", "upgrade", "head"]

  qdrant:
    image: qdrant/qdrant:v1.13.2
    container_name: face_register_qdrant_test
    environment:
      TZ: ${TZ:-UTC}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - person_detection
    healthcheck:
      test: ["CMD-SHELL", "bash -c ':> /dev/tcp/127.0.0.1/6333' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  app_test:
    image: face-register:test
    build:
      dockerfile: Dockerfile
      target: test
      args:
        APP_UID: ${APP_UID}
        APP_GID: ${APP_GID}
        LOG_DIR: ${LOG_DIR}
    container_name: face_register_app_test
    user: "${APP_UID}:${APP_GID}"
    environment:
      DATABASE_URL: ${DATABASE_URL}_test
      MODEL_RUNTIME_TYPE: ${MODEL_RUNTIME_TYPE}
      TRITON_SERVER_URL: ${TRITON_SERVER_URL}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_SECURE: ${MINIO_SECURE}
      SCRFD_BUCKET: ${SCRFD_BUCKET}
      SCRFD_MODEL_OBJECT: ${SCRFD_MODEL_OBJECT}
      ARCFACE_BUCKET: ${ARCFACE_BUCKET}
      ARCFACE_MODEL_OBJECT: ${ARCFACE_MODEL_OBJECT}
      API_PREFIX: ${API_PREFIX}
      PROJECT_NAME: ${PROJECT_NAME}
      FRONTEND_URL: ${FRONTEND_URL}
      ADMIN_PANEL_URL: ${ADMIN_PANEL_URL}
      QDRANT_URL: ${QDRANT_URL}
      QDRANT_API_KEY: ${QDRANT_API_KEY}
      QDRANT_COLLECTION: ${QDRANT_COLLECTION}
      QDRANT_VECTOR_SIZE: ${QDRANT_VECTOR_SIZE}
      SERVICE_NAME: ${SERVICE_NAME}
      LOG_DIR: ${LOG_DIR}
      LOG_TO_STDOUT: ${LOG_TO_STDOUT}
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_MAX_DAYS: ${LOG_MAX_DAYS}
      TZ: ${TZ:-UTC}
    volumes:
      - ./assets:/app/assets
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    networks:
      - person_detection

networks:
  person_detection:
    external: true
