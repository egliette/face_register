services:
  postgres:
    image: postgres:15
    container_name: face_register_postgres_test
    environment:
      POSTGRES_DB: ${POSTGRES_DB}_test
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - person_detection
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: face_register_minio_test
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server /data
    networks:
      - person_detection
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  app_test:
    image: face-register:test
    build:
      dockerfile: Dockerfile
      target: test
    container_name: face_register_app_test
    environment:
      DATABASE_URL: ${DATABASE_URL}_test
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_SECURE: ${MINIO_SECURE}
      SCRFD_BUCKET: ${SCRFD_BUCKET}
      SCRFD_MODEL_OBJECT: ${SCRFD_MODEL_OBJECT}
      ARCFACE_BUCKET: ${ARCFACE_BUCKET}
      ARCFACE_MODEL_OBJECT: ${ARCFACE_MODEL_OBJECT}
      API_PREFIX: ${API_PREFIX}
      PROJECT_NAME: ${PROJECT_NAME}
      FRONTEND_URL: ${FRONTEND_URL}
      ADMIN_PANEL_URL: ${ADMIN_PANEL_URL}
    volumes:
      - ./assets:/app/assets
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - person_detection
    command: ["pytest", "-v"]

networks:
  person_detection:
    external: true
