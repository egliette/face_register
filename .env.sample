# ==========================
# MinIO connection settings
# ==========================
# Endpoint format: host:port
MINIO_ENDPOINT=minio:9000
MINIO_ACCESS_KEY=YOUR_ACCESS_KEY
MINIO_SECRET_KEY=YOUR_SECRET_KEY
# Set to true if your MinIO endpoint uses HTTPS
MINIO_SECURE=false

# ======================================
# SCRFD face detector (ONNX model)
# Bucket folder structure example:
#   models/
#     scrfd/
# ======================================
SCRFD_BUCKET=models
SCRFD_MODEL_OBJECT=scrfd/scrfd_640x640_kps.onnx

# ======================================
# Model runtime configuration
# ======================================
# Runtime type: 'onnx' or 'triton'
MODEL_RUNTIME_TYPE=onnx
# Triton server URL (required if runtime_type='triton')
TRITON_SERVER_URL=http://triton:8000

# ======================================
# ArcFace face recognition (ONNX model)
# Bucket folder structure example:
#   models/
#     arcface/
# ======================================
ARCFACE_BUCKET=models
ARCFACE_MODEL_OBJECT=arcface/arcface_r100_glint360k.onnx

# ==========================
# Database settings
# ==========================
POSTGRES_DB=face_register
POSTGRES_USER=user
POSTGRES_PASSWORD=password

# Database URL template - uses variables for flexibility
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

# ==========================
# API settings
# ==========================
API_PREFIX=/api
PROJECT_NAME="Face Register API"
FRONTEND_URL=http://localhost:3000
ADMIN_PANEL_URL=http://localhost:8080
API_TOKEN=

# ==========================
# Qdrant settings
# ==========================
QDRANT_URL=http://qdrant:6333
# QDRANT_API_KEY=your_api_key_if_any
QDRANT_COLLECTION=face_embeddings
QDRANT_VECTOR_SIZE=512

# ==========================
# Logging settings
# ==========================
# Service name used for logger identification and log file naming
SERVICE_NAME=face_register
# Directory where log files will be stored
LOG_DIR=logs
# Whether to output logs to stdout (true/false)
LOG_TO_STDOUT=true
# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO
# Maximum number of days to keep log files (0 = keep forever)
LOG_MAX_DAYS=3

# ==========================
# Container user mapping
# ==========================
# Set these to your host user's UID and GID to avoid permission issues
# when bind-mounting local folders (like ./logs) into the container.
# On Linux/macOS you can use: id -u and id -g
APP_UID=1000
APP_GID=1000
